apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d
          resources:
            limits:
              cpu: "100m"
              memory: "128Mi"
            requests:
              cpu: "100m"
              memory: "128Mi"
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: system
data:
  kubernetes-dashboard.conf: |
    server {
      listen 80;
      server_name _;
      location / {
        proxy_pass https://argocd-server.argocd/;
        proxy_ssl_verify off;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      }
      
      location /_dash/ {
        proxy_pass https://kubernetes-dashboard.kubernetes-dashboard/;
        proxy_ssl_verify off;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: system
spec:
  ports:
    - name: "http-port"
      protocol: "TCP"
      port: 80
      targetPort: 80
    - name: "https-port"
      protocol: "TCP"
      port: 443
      targetPort: 443
  selector:
    app: nginx
